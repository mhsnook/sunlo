Phase 0: MEP
1. $lang/library needs the "trending/popular" wired up to real data
1. forgot-password
1. set-new-password
1. change-email
1. change-password

COMPLETE JOURNEYS
1. when you sign in for the first time it should redirect you to getting-started page (currently to home)
1. when the profile is blank, the sidebar haas an error
1. when you sign in for the first time, the /learn screen is an error; actually anything accessing the profile
	seems to be an error -- it should redirect you? we should put profile into context?
1. when you go to the deck page and it's empty, we should get a prompt for the library, ya?
1. when you go to the deck page and it's empty, we shouldn't prompt you to do a review; we should take you on a little journey to find new ones

USER TESTING FIXES
1. on a phone, the success toasts, appearing at the bottom, aren't always visible (if the keyboard is out)
1. on a submission we should collapse the keyboard automatically
1. when you navigate it should close the sidebar
1. when you have a pending friend request it should be visible from the friends home
1. add a deck -- the "select one language" input should have a better type-to-search which includes the language name as well a the code
1. when you go to the library and add cards to your deck, and then go to the review page, it's still loaded the empty-set that was returned before
1. malformed link like /learn/undefined should 404, or at least say 'do you wanna start learning this?' 
		- at least we should validate this parameter has length === 3 to even match it
1. When you try to sign up using existing creds you get an error and then get logged in. We
	should handle this. (inspect and special-case the error before throwing, and toast accordingly)


EPIC: FSRS Followup
1. Reviewables list should be _fully static_ so we can invalidate the cache and it won't change mid-session
1. during a review, if you skip cards, they should be mentioned on the final page
		(instead of just "congratulations; you're done")
1. the "Again" option should make the card happen again (this session)
1. should there be a deck setting for "t/f when i've run out of new cards, pick more for me (automated)"
1. re-implement lost functionality:
	-	undo and redo a review
1. instead of scheduling at the time of review, retrieval function should be dynamic
		to allow for different desired retrievability to be sent from the client (so we
		can have an "easy" day sometimes, or retrieve cards so mostly they're 0.9 but
		some easy ones are there to start)


EPIC: Postgres DX / Run Supabase Locally
1. ✅ run locally & document
1. ✅ add migrations maybe? maybe just seeds or schema?
	- ✅ organize seeds a bit more so they can be committed (no user data, phrases separated from sample user data)
1. ✅ connect supabase and vercel env variables
1. make the email stuff work with the local setup
1. pgTap set up testing framework / run tests on the RPC functions: https://supabase.com/docs/guides/database/extensions/pgtap
1. ✅ switch to v8
	- test out pglinter? 
1. future:
	- use postmark templates like [this](https://github.com/supabase/auth/issues/304#issuecomment-998029660)


EPIC: Convert useQueries to usequery(someOptions) format
-	instead of using { data, isPending, error }, we may want to switch to 
	queryClient.ensureQueryData(queryOptions) in the route loaader
	- ✅ Completed for useLanguage
	- ✅ Completed for useDeck
	- ✅ Do the same for useProfile
	- Do the same for useRelations


EPIC OF SIGNUPS AND GETTING STARTED AND CONNECTING FRIENDS
1.	add "copy invitation text" to invite page
1.	~make the signup email nice~
1. the getting-started flow:
	*	✅ learners get the add-first-deck page
	*	✅ friends get an accept-friendship page
		*	✅ Build this "accept-one-particular-invite" page
		*	original invite needs to embed the friend's uid
		*	grab the url argument and save it when the temp user is created
		*	detect the friend uid in the user object for the first-redirect after getting-started
1. the unauthenticated find-a-friend page should prompt you to sign in/sign up if you try to interact


EDGE CASES LEFT BEHIND
1. When you reach the getting-started page with no "user role" set
	* rn the redirect pretends you're a helper
	* we should probably ask ppl instead
1. If you hack the client it's possible to "Accept" an invitation that hasn't been sent;
		the RLS can reject these and/or the friend_summary view can check and verify the who sequence.
		Both of these options seem secure, and they won't conflict.
	- replace this RLS hack with an RPC
	- Explore: move some/many tables out of the public schema, keep the RLS but make them accessible only via RPCs
1. ✅ build some "info" page for public profles/Friends
	- should be able to unfriend them


MOCKS / Incompletes
1. Invite-A-Friend is a whole feature-set that needs to be built!
	1. Invite a new user /friends/invite hasn't been tested through
		- may need the email and whatsapp links wired up to have the referring user id?
		- may need a "copy to clipboard" link (for desktop or both?)
1. ✅ The "Deck Home" screen or Welcome Screen
		✅ Deck overview section, recent reviews and such
			- wire it up
		✅ Friends activity ?? (maybe doesn't belong here)
			- wire it up
		- move the Quick Search link into the navbar??
1. $lang/library needs a search bar added to filter in realtime
1. ✅ The "new friend signup" screens -- what are we doing here? selecting which deck(s) we're helping with... and then what?
1. Public Library is a special browsing experience that needs to be built!	
	1. $lang/library has this "recently reviewed" filter which probably should be a field on the user_card_plus view
	1. $lang/index needs the review overview graph thing made
1. ✅ Deck Settings: replace with the nicer radio: https://v0.dev/chat/PNg3tT-DSoC,
		✅ and wire up the mutation
		✅ add the `learning_goal` field on user_deck
		✅ add the "archive" form, and field on user_deck
		✅ wire up the mutation
		- perhaps add a mode for how aggro to be (10, 15, 20 new cards per review)
1. find-a-friend may be accessed without a login, so we should make sure the status buttons
		can react to that scenario and trigger a signup/login when needed


CARD INTERACTIONS
1. bring over the new structure for relations
1. ✅ make the "add to deck" function work
	- or no deck (start learning this language)
	- or not logged in (login)
1. deeper interactions with cards:
	- when we open these accordion things, should we open a whole dialog or a sonner? or have a button that opens the whole dialog?
	- $lang/library/phrase/$pid perhaps should be built which permalinks to the same thing as goes in the dialog
	- ✅ add translations button must work
1. "suggest edits to this card"


UI POLISH
1. Add activity graph to deck summaries :)) https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z4V1sjrXqjvFdnCUbxPFqd5p4DtH5/tree/src/components/ActivityDiagram.svelte
1. Full multilingual text search:
	- PGroonga: https://supabase.com/docs/guides/database/extensions/pgroonga
	- fulltext search without accents: https://www.postgresql.org/docs/current/unaccent.html
	- ⛔ fuzzy string match that only works well with american names: https://www.postgresql.org/docs/current/fuzzystrmatch.html
1. This chat's features: https://v0.dev/chat/animated-card-interface-MHacnAB0fOp
	1. slide the cards in and out horizontally
	1. give us a completion progress bar in the /review interface
1. suspend until profile loads
1. when the router loader is suspending and then stops, transition in
1. replace my multi-language select with https://craft.mxkaske.dev/post/fancy-multi-select


OTHER IDEAS
1. a app shortcut that opens straight into new-card interface
1. take a picture, do OCR on it, let people create a card directly from the real world
1. Prettier URLs? with hashIDs (can hash the uuid): https://supabase.com/docs/guides/database/extensions/pg_hashids


ONGOING DATA-HEALTH PRUNING/CURING
1. For any of the RPC function we should set some permissions:
		```sql
		revoke execute on function public.hello_world from public;
		revoke execute on function public.hello_world from anon;
		-- grant execute on function public.hello_world from authenticated;
		```
1. Implement multi-column constraints for things like:
		- ✅ user_deck should be unique on (language, uid)
		- ✅ user_card should be unique on (phrase_id, uid)
