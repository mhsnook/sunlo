/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserRouteImport } from './routes/_user'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserProfileRouteImport } from './routes/_user/profile'
import { Route as UserLearnRouteImport } from './routes/_user/learn'
import { Route as UserGettingStartedRouteImport } from './routes/_user/getting-started'
import { Route as UserFriendsRouteImport } from './routes/_user/friends'
import { Route as UserAcceptInviteRouteImport } from './routes/_user/accept-invite'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSetNewPasswordRouteImport } from './routes/_auth/set-new-password'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as AuthFindAFriendRouteImport } from './routes/_auth/find-a-friend'
import { Route as UserProfileIndexRouteImport } from './routes/_user/profile/index'
import { Route as UserLearnIndexRouteImport } from './routes/_user/learn/index'
import { Route as UserFriendsIndexRouteImport } from './routes/_user/friends/index'
import { Route as UserProfileChangePasswordRouteImport } from './routes/_user/profile/change-password'
import { Route as UserProfileChangeEmailConfirmRouteImport } from './routes/_user/profile/change-email-confirm'
import { Route as UserProfileChangeEmailRouteImport } from './routes/_user/profile/change-email'
import { Route as UserLearnQuickSearchRouteImport } from './routes/_user/learn/quick-search'
import { Route as UserLearnArchivedRouteImport } from './routes/_user/learn/archived'
import { Route as UserLearnAddDeckRouteImport } from './routes/_user/learn/add-deck'
import { Route as UserLearnLangRouteImport } from './routes/_user/learn/$lang'
import { Route as UserFriendsSearchRouteImport } from './routes/_user/friends/search'
import { Route as UserFriendsRequestsRouteImport } from './routes/_user/friends/requests'
import { Route as UserFriendsInviteRouteImport } from './routes/_user/friends/invite'
import { Route as UserFriendsChatsRouteImport } from './routes/_user/friends/chats'
import { Route as UserFriendsUidRouteImport } from './routes/_user/friends/$uid'
import { Route as UserLearnLangIndexRouteImport } from './routes/_user/learn/$lang.index'
import { Route as UserFriendsChatsIndexRouteImport } from './routes/_user/friends/chats.index'
import { Route as UserLearnLangSearchRouteImport } from './routes/_user/learn/$lang.search'
import { Route as UserLearnLangReviewRouteImport } from './routes/_user/learn/$lang.review'
import { Route as UserLearnLangRequestsRouteImport } from './routes/_user/learn/$lang.requests'
import { Route as UserLearnLangLibraryRouteImport } from './routes/_user/learn/$lang.library'
import { Route as UserLearnLangDeckSettingsRouteImport } from './routes/_user/learn/$lang.deck-settings'
import { Route as UserLearnLangBulkAddRouteImport } from './routes/_user/learn/$lang.bulk-add'
import { Route as UserLearnLangAddPhraseRouteImport } from './routes/_user/learn/$lang.add-phrase'
import { Route as UserLearnLangIdRouteImport } from './routes/_user/learn/$lang.$id'
import { Route as UserFriendsSearchUidRouteImport } from './routes/_user/friends/search.$uid'
import { Route as UserFriendsChatsFriendIdRouteImport } from './routes/_user/friends/chats.$friendId'
import { Route as UserLearnLangReviewIndexRouteImport } from './routes/_user/learn/$lang.review.index'
import { Route as UserLearnLangRequestsIndexRouteImport } from './routes/_user/learn/$lang.requests.index'
import { Route as UserLearnLangReviewGoRouteImport } from './routes/_user/learn/$lang.review.go'
import { Route as UserLearnLangRequestsNewRouteImport } from './routes/_user/learn/$lang.requests.new'
import { Route as UserLearnLangRequestsIdRouteImport } from './routes/_user/learn/$lang.requests.$id'
import { Route as UserFriendsChatsFriendIdRecommendRouteImport } from './routes/_user/friends/chats.$friendId.recommend'

const RequestRemovalLazyRouteImport = createFileRoute('/request-removal')()
const PrivacyPolicyLazyRouteImport = createFileRoute('/privacy-policy')()
const ComponentsLazyRouteImport = createFileRoute('/components')()

const RequestRemovalLazyRoute = RequestRemovalLazyRouteImport.update({
  id: '/request-removal',
  path: '/request-removal',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/request-removal.lazy').then((d) => d.Route),
)
const PrivacyPolicyLazyRoute = PrivacyPolicyLazyRouteImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/privacy-policy.lazy').then((d) => d.Route),
)
const ComponentsLazyRoute = ComponentsLazyRouteImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/components.lazy').then((d) => d.Route))
const UserRoute = UserRouteImport.update({
  id: '/_user',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserProfileRoute = UserProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => UserRoute,
} as any)
const UserLearnRoute = UserLearnRouteImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => UserRoute,
} as any)
const UserGettingStartedRoute = UserGettingStartedRouteImport.update({
  id: '/getting-started',
  path: '/getting-started',
  getParentRoute: () => UserRoute,
} as any)
const UserFriendsRoute = UserFriendsRouteImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => UserRoute,
} as any)
const UserAcceptInviteRoute = UserAcceptInviteRouteImport.update({
  id: '/accept-invite',
  path: '/accept-invite',
  getParentRoute: () => UserRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSetNewPasswordRoute = AuthSetNewPasswordRouteImport.update({
  id: '/set-new-password',
  path: '/set-new-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthFindAFriendRoute = AuthFindAFriendRouteImport.update({
  id: '/find-a-friend',
  path: '/find-a-friend',
  getParentRoute: () => AuthRoute,
} as any)
const UserProfileIndexRoute = UserProfileIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserProfileRoute,
} as any)
const UserLearnIndexRoute = UserLearnIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserLearnRoute,
} as any)
const UserFriendsIndexRoute = UserFriendsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserFriendsRoute,
} as any)
const UserProfileChangePasswordRoute =
  UserProfileChangePasswordRouteImport.update({
    id: '/change-password',
    path: '/change-password',
    getParentRoute: () => UserProfileRoute,
  } as any)
const UserProfileChangeEmailConfirmRoute =
  UserProfileChangeEmailConfirmRouteImport.update({
    id: '/change-email-confirm',
    path: '/change-email-confirm',
    getParentRoute: () => UserProfileRoute,
  } as any)
const UserProfileChangeEmailRoute = UserProfileChangeEmailRouteImport.update({
  id: '/change-email',
  path: '/change-email',
  getParentRoute: () => UserProfileRoute,
} as any)
const UserLearnQuickSearchRoute = UserLearnQuickSearchRouteImport.update({
  id: '/quick-search',
  path: '/quick-search',
  getParentRoute: () => UserLearnRoute,
} as any)
const UserLearnArchivedRoute = UserLearnArchivedRouteImport.update({
  id: '/archived',
  path: '/archived',
  getParentRoute: () => UserLearnRoute,
} as any)
const UserLearnAddDeckRoute = UserLearnAddDeckRouteImport.update({
  id: '/add-deck',
  path: '/add-deck',
  getParentRoute: () => UserLearnRoute,
} as any)
const UserLearnLangRoute = UserLearnLangRouteImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => UserLearnRoute,
} as any)
const UserFriendsSearchRoute = UserFriendsSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => UserFriendsRoute,
} as any)
const UserFriendsRequestsRoute = UserFriendsRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => UserFriendsRoute,
} as any)
const UserFriendsInviteRoute = UserFriendsInviteRouteImport.update({
  id: '/invite',
  path: '/invite',
  getParentRoute: () => UserFriendsRoute,
} as any)
const UserFriendsChatsRoute = UserFriendsChatsRouteImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => UserFriendsRoute,
} as any)
const UserFriendsUidRoute = UserFriendsUidRouteImport.update({
  id: '/$uid',
  path: '/$uid',
  getParentRoute: () => UserFriendsRoute,
} as any)
const UserLearnLangIndexRoute = UserLearnLangIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserFriendsChatsIndexRoute = UserFriendsChatsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserFriendsChatsRoute,
} as any)
const UserLearnLangSearchRoute = UserLearnLangSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserLearnLangReviewRoute = UserLearnLangReviewRouteImport.update({
  id: '/review',
  path: '/review',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserLearnLangRequestsRoute = UserLearnLangRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserLearnLangLibraryRoute = UserLearnLangLibraryRouteImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserLearnLangDeckSettingsRoute =
  UserLearnLangDeckSettingsRouteImport.update({
    id: '/deck-settings',
    path: '/deck-settings',
    getParentRoute: () => UserLearnLangRoute,
  } as any)
const UserLearnLangBulkAddRoute = UserLearnLangBulkAddRouteImport.update({
  id: '/bulk-add',
  path: '/bulk-add',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserLearnLangAddPhraseRoute = UserLearnLangAddPhraseRouteImport.update({
  id: '/add-phrase',
  path: '/add-phrase',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserLearnLangIdRoute = UserLearnLangIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => UserLearnLangRoute,
} as any)
const UserFriendsSearchUidRoute = UserFriendsSearchUidRouteImport.update({
  id: '/$uid',
  path: '/$uid',
  getParentRoute: () => UserFriendsSearchRoute,
} as any)
const UserFriendsChatsFriendIdRoute =
  UserFriendsChatsFriendIdRouteImport.update({
    id: '/$friendId',
    path: '/$friendId',
    getParentRoute: () => UserFriendsChatsRoute,
  } as any)
const UserLearnLangReviewIndexRoute =
  UserLearnLangReviewIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => UserLearnLangReviewRoute,
  } as any)
const UserLearnLangRequestsIndexRoute =
  UserLearnLangRequestsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => UserLearnLangRequestsRoute,
  } as any)
const UserLearnLangReviewGoRoute = UserLearnLangReviewGoRouteImport.update({
  id: '/go',
  path: '/go',
  getParentRoute: () => UserLearnLangReviewRoute,
} as any)
const UserLearnLangRequestsNewRoute =
  UserLearnLangRequestsNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => UserLearnLangRequestsRoute,
  } as any)
const UserLearnLangRequestsIdRoute = UserLearnLangRequestsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => UserLearnLangRequestsRoute,
} as any)
const UserFriendsChatsFriendIdRecommendRoute =
  UserFriendsChatsFriendIdRecommendRouteImport.update({
    id: '/recommend',
    path: '/recommend',
    getParentRoute: () => UserFriendsChatsFriendIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/components': typeof ComponentsLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/request-removal': typeof RequestRemovalLazyRoute
  '/find-a-friend': typeof AuthFindAFriendRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/set-new-password': typeof AuthSetNewPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/accept-invite': typeof UserAcceptInviteRoute
  '/friends': typeof UserFriendsRouteWithChildren
  '/getting-started': typeof UserGettingStartedRoute
  '/learn': typeof UserLearnRouteWithChildren
  '/profile': typeof UserProfileRouteWithChildren
  '/friends/$uid': typeof UserFriendsUidRoute
  '/friends/chats': typeof UserFriendsChatsRouteWithChildren
  '/friends/invite': typeof UserFriendsInviteRoute
  '/friends/requests': typeof UserFriendsRequestsRoute
  '/friends/search': typeof UserFriendsSearchRouteWithChildren
  '/learn/$lang': typeof UserLearnLangRouteWithChildren
  '/learn/add-deck': typeof UserLearnAddDeckRoute
  '/learn/archived': typeof UserLearnArchivedRoute
  '/learn/quick-search': typeof UserLearnQuickSearchRoute
  '/profile/change-email': typeof UserProfileChangeEmailRoute
  '/profile/change-email-confirm': typeof UserProfileChangeEmailConfirmRoute
  '/profile/change-password': typeof UserProfileChangePasswordRoute
  '/friends/': typeof UserFriendsIndexRoute
  '/learn/': typeof UserLearnIndexRoute
  '/profile/': typeof UserProfileIndexRoute
  '/friends/chats/$friendId': typeof UserFriendsChatsFriendIdRouteWithChildren
  '/friends/search/$uid': typeof UserFriendsSearchUidRoute
  '/learn/$lang/$id': typeof UserLearnLangIdRoute
  '/learn/$lang/add-phrase': typeof UserLearnLangAddPhraseRoute
  '/learn/$lang/bulk-add': typeof UserLearnLangBulkAddRoute
  '/learn/$lang/deck-settings': typeof UserLearnLangDeckSettingsRoute
  '/learn/$lang/library': typeof UserLearnLangLibraryRoute
  '/learn/$lang/requests': typeof UserLearnLangRequestsRouteWithChildren
  '/learn/$lang/review': typeof UserLearnLangReviewRouteWithChildren
  '/learn/$lang/search': typeof UserLearnLangSearchRoute
  '/friends/chats/': typeof UserFriendsChatsIndexRoute
  '/learn/$lang/': typeof UserLearnLangIndexRoute
  '/friends/chats/$friendId/recommend': typeof UserFriendsChatsFriendIdRecommendRoute
  '/learn/$lang/requests/$id': typeof UserLearnLangRequestsIdRoute
  '/learn/$lang/requests/new': typeof UserLearnLangRequestsNewRoute
  '/learn/$lang/review/go': typeof UserLearnLangReviewGoRoute
  '/learn/$lang/requests/': typeof UserLearnLangRequestsIndexRoute
  '/learn/$lang/review/': typeof UserLearnLangReviewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/components': typeof ComponentsLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/request-removal': typeof RequestRemovalLazyRoute
  '/find-a-friend': typeof AuthFindAFriendRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/set-new-password': typeof AuthSetNewPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/accept-invite': typeof UserAcceptInviteRoute
  '/getting-started': typeof UserGettingStartedRoute
  '/friends/$uid': typeof UserFriendsUidRoute
  '/friends/invite': typeof UserFriendsInviteRoute
  '/friends/requests': typeof UserFriendsRequestsRoute
  '/friends/search': typeof UserFriendsSearchRouteWithChildren
  '/learn/add-deck': typeof UserLearnAddDeckRoute
  '/learn/archived': typeof UserLearnArchivedRoute
  '/learn/quick-search': typeof UserLearnQuickSearchRoute
  '/profile/change-email': typeof UserProfileChangeEmailRoute
  '/profile/change-email-confirm': typeof UserProfileChangeEmailConfirmRoute
  '/profile/change-password': typeof UserProfileChangePasswordRoute
  '/friends': typeof UserFriendsIndexRoute
  '/learn': typeof UserLearnIndexRoute
  '/profile': typeof UserProfileIndexRoute
  '/friends/chats/$friendId': typeof UserFriendsChatsFriendIdRouteWithChildren
  '/friends/search/$uid': typeof UserFriendsSearchUidRoute
  '/learn/$lang/$id': typeof UserLearnLangIdRoute
  '/learn/$lang/add-phrase': typeof UserLearnLangAddPhraseRoute
  '/learn/$lang/bulk-add': typeof UserLearnLangBulkAddRoute
  '/learn/$lang/deck-settings': typeof UserLearnLangDeckSettingsRoute
  '/learn/$lang/library': typeof UserLearnLangLibraryRoute
  '/learn/$lang/search': typeof UserLearnLangSearchRoute
  '/friends/chats': typeof UserFriendsChatsIndexRoute
  '/learn/$lang': typeof UserLearnLangIndexRoute
  '/friends/chats/$friendId/recommend': typeof UserFriendsChatsFriendIdRecommendRoute
  '/learn/$lang/requests/$id': typeof UserLearnLangRequestsIdRoute
  '/learn/$lang/requests/new': typeof UserLearnLangRequestsNewRoute
  '/learn/$lang/review/go': typeof UserLearnLangReviewGoRoute
  '/learn/$lang/requests': typeof UserLearnLangRequestsIndexRoute
  '/learn/$lang/review': typeof UserLearnLangReviewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_user': typeof UserRouteWithChildren
  '/components': typeof ComponentsLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/request-removal': typeof RequestRemovalLazyRoute
  '/_auth/find-a-friend': typeof AuthFindAFriendRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/set-new-password': typeof AuthSetNewPasswordRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_user/accept-invite': typeof UserAcceptInviteRoute
  '/_user/friends': typeof UserFriendsRouteWithChildren
  '/_user/getting-started': typeof UserGettingStartedRoute
  '/_user/learn': typeof UserLearnRouteWithChildren
  '/_user/profile': typeof UserProfileRouteWithChildren
  '/_user/friends/$uid': typeof UserFriendsUidRoute
  '/_user/friends/chats': typeof UserFriendsChatsRouteWithChildren
  '/_user/friends/invite': typeof UserFriendsInviteRoute
  '/_user/friends/requests': typeof UserFriendsRequestsRoute
  '/_user/friends/search': typeof UserFriendsSearchRouteWithChildren
  '/_user/learn/$lang': typeof UserLearnLangRouteWithChildren
  '/_user/learn/add-deck': typeof UserLearnAddDeckRoute
  '/_user/learn/archived': typeof UserLearnArchivedRoute
  '/_user/learn/quick-search': typeof UserLearnQuickSearchRoute
  '/_user/profile/change-email': typeof UserProfileChangeEmailRoute
  '/_user/profile/change-email-confirm': typeof UserProfileChangeEmailConfirmRoute
  '/_user/profile/change-password': typeof UserProfileChangePasswordRoute
  '/_user/friends/': typeof UserFriendsIndexRoute
  '/_user/learn/': typeof UserLearnIndexRoute
  '/_user/profile/': typeof UserProfileIndexRoute
  '/_user/friends/chats/$friendId': typeof UserFriendsChatsFriendIdRouteWithChildren
  '/_user/friends/search/$uid': typeof UserFriendsSearchUidRoute
  '/_user/learn/$lang/$id': typeof UserLearnLangIdRoute
  '/_user/learn/$lang/add-phrase': typeof UserLearnLangAddPhraseRoute
  '/_user/learn/$lang/bulk-add': typeof UserLearnLangBulkAddRoute
  '/_user/learn/$lang/deck-settings': typeof UserLearnLangDeckSettingsRoute
  '/_user/learn/$lang/library': typeof UserLearnLangLibraryRoute
  '/_user/learn/$lang/requests': typeof UserLearnLangRequestsRouteWithChildren
  '/_user/learn/$lang/review': typeof UserLearnLangReviewRouteWithChildren
  '/_user/learn/$lang/search': typeof UserLearnLangSearchRoute
  '/_user/friends/chats/': typeof UserFriendsChatsIndexRoute
  '/_user/learn/$lang/': typeof UserLearnLangIndexRoute
  '/_user/friends/chats/$friendId/recommend': typeof UserFriendsChatsFriendIdRecommendRoute
  '/_user/learn/$lang/requests/$id': typeof UserLearnLangRequestsIdRoute
  '/_user/learn/$lang/requests/new': typeof UserLearnLangRequestsNewRoute
  '/_user/learn/$lang/review/go': typeof UserLearnLangReviewGoRoute
  '/_user/learn/$lang/requests/': typeof UserLearnLangRequestsIndexRoute
  '/_user/learn/$lang/review/': typeof UserLearnLangReviewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/components'
    | '/privacy-policy'
    | '/request-removal'
    | '/find-a-friend'
    | '/forgot-password'
    | '/login'
    | '/set-new-password'
    | '/signup'
    | '/accept-invite'
    | '/friends'
    | '/getting-started'
    | '/learn'
    | '/profile'
    | '/friends/$uid'
    | '/friends/chats'
    | '/friends/invite'
    | '/friends/requests'
    | '/friends/search'
    | '/learn/$lang'
    | '/learn/add-deck'
    | '/learn/archived'
    | '/learn/quick-search'
    | '/profile/change-email'
    | '/profile/change-email-confirm'
    | '/profile/change-password'
    | '/friends/'
    | '/learn/'
    | '/profile/'
    | '/friends/chats/$friendId'
    | '/friends/search/$uid'
    | '/learn/$lang/$id'
    | '/learn/$lang/add-phrase'
    | '/learn/$lang/bulk-add'
    | '/learn/$lang/deck-settings'
    | '/learn/$lang/library'
    | '/learn/$lang/requests'
    | '/learn/$lang/review'
    | '/learn/$lang/search'
    | '/friends/chats/'
    | '/learn/$lang/'
    | '/friends/chats/$friendId/recommend'
    | '/learn/$lang/requests/$id'
    | '/learn/$lang/requests/new'
    | '/learn/$lang/review/go'
    | '/learn/$lang/requests/'
    | '/learn/$lang/review/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/components'
    | '/privacy-policy'
    | '/request-removal'
    | '/find-a-friend'
    | '/forgot-password'
    | '/login'
    | '/set-new-password'
    | '/signup'
    | '/accept-invite'
    | '/getting-started'
    | '/friends/$uid'
    | '/friends/invite'
    | '/friends/requests'
    | '/friends/search'
    | '/learn/add-deck'
    | '/learn/archived'
    | '/learn/quick-search'
    | '/profile/change-email'
    | '/profile/change-email-confirm'
    | '/profile/change-password'
    | '/friends'
    | '/learn'
    | '/profile'
    | '/friends/chats/$friendId'
    | '/friends/search/$uid'
    | '/learn/$lang/$id'
    | '/learn/$lang/add-phrase'
    | '/learn/$lang/bulk-add'
    | '/learn/$lang/deck-settings'
    | '/learn/$lang/library'
    | '/learn/$lang/search'
    | '/friends/chats'
    | '/learn/$lang'
    | '/friends/chats/$friendId/recommend'
    | '/learn/$lang/requests/$id'
    | '/learn/$lang/requests/new'
    | '/learn/$lang/review/go'
    | '/learn/$lang/requests'
    | '/learn/$lang/review'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_user'
    | '/components'
    | '/privacy-policy'
    | '/request-removal'
    | '/_auth/find-a-friend'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/set-new-password'
    | '/_auth/signup'
    | '/_user/accept-invite'
    | '/_user/friends'
    | '/_user/getting-started'
    | '/_user/learn'
    | '/_user/profile'
    | '/_user/friends/$uid'
    | '/_user/friends/chats'
    | '/_user/friends/invite'
    | '/_user/friends/requests'
    | '/_user/friends/search'
    | '/_user/learn/$lang'
    | '/_user/learn/add-deck'
    | '/_user/learn/archived'
    | '/_user/learn/quick-search'
    | '/_user/profile/change-email'
    | '/_user/profile/change-email-confirm'
    | '/_user/profile/change-password'
    | '/_user/friends/'
    | '/_user/learn/'
    | '/_user/profile/'
    | '/_user/friends/chats/$friendId'
    | '/_user/friends/search/$uid'
    | '/_user/learn/$lang/$id'
    | '/_user/learn/$lang/add-phrase'
    | '/_user/learn/$lang/bulk-add'
    | '/_user/learn/$lang/deck-settings'
    | '/_user/learn/$lang/library'
    | '/_user/learn/$lang/requests'
    | '/_user/learn/$lang/review'
    | '/_user/learn/$lang/search'
    | '/_user/friends/chats/'
    | '/_user/learn/$lang/'
    | '/_user/friends/chats/$friendId/recommend'
    | '/_user/learn/$lang/requests/$id'
    | '/_user/learn/$lang/requests/new'
    | '/_user/learn/$lang/review/go'
    | '/_user/learn/$lang/requests/'
    | '/_user/learn/$lang/review/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
  ComponentsLazyRoute: typeof ComponentsLazyRoute
  PrivacyPolicyLazyRoute: typeof PrivacyPolicyLazyRoute
  RequestRemovalLazyRoute: typeof RequestRemovalLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/request-removal': {
      id: '/request-removal'
      path: '/request-removal'
      fullPath: '/request-removal'
      preLoaderRoute: typeof RequestRemovalLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components': {
      id: '/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_user/profile': {
      id: '/_user/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof UserProfileRouteImport
      parentRoute: typeof UserRoute
    }
    '/_user/learn': {
      id: '/_user/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof UserLearnRouteImport
      parentRoute: typeof UserRoute
    }
    '/_user/getting-started': {
      id: '/_user/getting-started'
      path: '/getting-started'
      fullPath: '/getting-started'
      preLoaderRoute: typeof UserGettingStartedRouteImport
      parentRoute: typeof UserRoute
    }
    '/_user/friends': {
      id: '/_user/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof UserFriendsRouteImport
      parentRoute: typeof UserRoute
    }
    '/_user/accept-invite': {
      id: '/_user/accept-invite'
      path: '/accept-invite'
      fullPath: '/accept-invite'
      preLoaderRoute: typeof UserAcceptInviteRouteImport
      parentRoute: typeof UserRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/set-new-password': {
      id: '/_auth/set-new-password'
      path: '/set-new-password'
      fullPath: '/set-new-password'
      preLoaderRoute: typeof AuthSetNewPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/find-a-friend': {
      id: '/_auth/find-a-friend'
      path: '/find-a-friend'
      fullPath: '/find-a-friend'
      preLoaderRoute: typeof AuthFindAFriendRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_user/profile/': {
      id: '/_user/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof UserProfileIndexRouteImport
      parentRoute: typeof UserProfileRoute
    }
    '/_user/learn/': {
      id: '/_user/learn/'
      path: '/'
      fullPath: '/learn/'
      preLoaderRoute: typeof UserLearnIndexRouteImport
      parentRoute: typeof UserLearnRoute
    }
    '/_user/friends/': {
      id: '/_user/friends/'
      path: '/'
      fullPath: '/friends/'
      preLoaderRoute: typeof UserFriendsIndexRouteImport
      parentRoute: typeof UserFriendsRoute
    }
    '/_user/profile/change-password': {
      id: '/_user/profile/change-password'
      path: '/change-password'
      fullPath: '/profile/change-password'
      preLoaderRoute: typeof UserProfileChangePasswordRouteImport
      parentRoute: typeof UserProfileRoute
    }
    '/_user/profile/change-email-confirm': {
      id: '/_user/profile/change-email-confirm'
      path: '/change-email-confirm'
      fullPath: '/profile/change-email-confirm'
      preLoaderRoute: typeof UserProfileChangeEmailConfirmRouteImport
      parentRoute: typeof UserProfileRoute
    }
    '/_user/profile/change-email': {
      id: '/_user/profile/change-email'
      path: '/change-email'
      fullPath: '/profile/change-email'
      preLoaderRoute: typeof UserProfileChangeEmailRouteImport
      parentRoute: typeof UserProfileRoute
    }
    '/_user/learn/quick-search': {
      id: '/_user/learn/quick-search'
      path: '/quick-search'
      fullPath: '/learn/quick-search'
      preLoaderRoute: typeof UserLearnQuickSearchRouteImport
      parentRoute: typeof UserLearnRoute
    }
    '/_user/learn/archived': {
      id: '/_user/learn/archived'
      path: '/archived'
      fullPath: '/learn/archived'
      preLoaderRoute: typeof UserLearnArchivedRouteImport
      parentRoute: typeof UserLearnRoute
    }
    '/_user/learn/add-deck': {
      id: '/_user/learn/add-deck'
      path: '/add-deck'
      fullPath: '/learn/add-deck'
      preLoaderRoute: typeof UserLearnAddDeckRouteImport
      parentRoute: typeof UserLearnRoute
    }
    '/_user/learn/$lang': {
      id: '/_user/learn/$lang'
      path: '/$lang'
      fullPath: '/learn/$lang'
      preLoaderRoute: typeof UserLearnLangRouteImport
      parentRoute: typeof UserLearnRoute
    }
    '/_user/friends/search': {
      id: '/_user/friends/search'
      path: '/search'
      fullPath: '/friends/search'
      preLoaderRoute: typeof UserFriendsSearchRouteImport
      parentRoute: typeof UserFriendsRoute
    }
    '/_user/friends/requests': {
      id: '/_user/friends/requests'
      path: '/requests'
      fullPath: '/friends/requests'
      preLoaderRoute: typeof UserFriendsRequestsRouteImport
      parentRoute: typeof UserFriendsRoute
    }
    '/_user/friends/invite': {
      id: '/_user/friends/invite'
      path: '/invite'
      fullPath: '/friends/invite'
      preLoaderRoute: typeof UserFriendsInviteRouteImport
      parentRoute: typeof UserFriendsRoute
    }
    '/_user/friends/chats': {
      id: '/_user/friends/chats'
      path: '/chats'
      fullPath: '/friends/chats'
      preLoaderRoute: typeof UserFriendsChatsRouteImport
      parentRoute: typeof UserFriendsRoute
    }
    '/_user/friends/$uid': {
      id: '/_user/friends/$uid'
      path: '/$uid'
      fullPath: '/friends/$uid'
      preLoaderRoute: typeof UserFriendsUidRouteImport
      parentRoute: typeof UserFriendsRoute
    }
    '/_user/learn/$lang/': {
      id: '/_user/learn/$lang/'
      path: '/'
      fullPath: '/learn/$lang/'
      preLoaderRoute: typeof UserLearnLangIndexRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/friends/chats/': {
      id: '/_user/friends/chats/'
      path: '/'
      fullPath: '/friends/chats/'
      preLoaderRoute: typeof UserFriendsChatsIndexRouteImport
      parentRoute: typeof UserFriendsChatsRoute
    }
    '/_user/learn/$lang/search': {
      id: '/_user/learn/$lang/search'
      path: '/search'
      fullPath: '/learn/$lang/search'
      preLoaderRoute: typeof UserLearnLangSearchRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/review': {
      id: '/_user/learn/$lang/review'
      path: '/review'
      fullPath: '/learn/$lang/review'
      preLoaderRoute: typeof UserLearnLangReviewRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/requests': {
      id: '/_user/learn/$lang/requests'
      path: '/requests'
      fullPath: '/learn/$lang/requests'
      preLoaderRoute: typeof UserLearnLangRequestsRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/library': {
      id: '/_user/learn/$lang/library'
      path: '/library'
      fullPath: '/learn/$lang/library'
      preLoaderRoute: typeof UserLearnLangLibraryRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/deck-settings': {
      id: '/_user/learn/$lang/deck-settings'
      path: '/deck-settings'
      fullPath: '/learn/$lang/deck-settings'
      preLoaderRoute: typeof UserLearnLangDeckSettingsRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/bulk-add': {
      id: '/_user/learn/$lang/bulk-add'
      path: '/bulk-add'
      fullPath: '/learn/$lang/bulk-add'
      preLoaderRoute: typeof UserLearnLangBulkAddRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/add-phrase': {
      id: '/_user/learn/$lang/add-phrase'
      path: '/add-phrase'
      fullPath: '/learn/$lang/add-phrase'
      preLoaderRoute: typeof UserLearnLangAddPhraseRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/learn/$lang/$id': {
      id: '/_user/learn/$lang/$id'
      path: '/$id'
      fullPath: '/learn/$lang/$id'
      preLoaderRoute: typeof UserLearnLangIdRouteImport
      parentRoute: typeof UserLearnLangRoute
    }
    '/_user/friends/search/$uid': {
      id: '/_user/friends/search/$uid'
      path: '/$uid'
      fullPath: '/friends/search/$uid'
      preLoaderRoute: typeof UserFriendsSearchUidRouteImport
      parentRoute: typeof UserFriendsSearchRoute
    }
    '/_user/friends/chats/$friendId': {
      id: '/_user/friends/chats/$friendId'
      path: '/$friendId'
      fullPath: '/friends/chats/$friendId'
      preLoaderRoute: typeof UserFriendsChatsFriendIdRouteImport
      parentRoute: typeof UserFriendsChatsRoute
    }
    '/_user/learn/$lang/review/': {
      id: '/_user/learn/$lang/review/'
      path: '/'
      fullPath: '/learn/$lang/review/'
      preLoaderRoute: typeof UserLearnLangReviewIndexRouteImport
      parentRoute: typeof UserLearnLangReviewRoute
    }
    '/_user/learn/$lang/requests/': {
      id: '/_user/learn/$lang/requests/'
      path: '/'
      fullPath: '/learn/$lang/requests/'
      preLoaderRoute: typeof UserLearnLangRequestsIndexRouteImport
      parentRoute: typeof UserLearnLangRequestsRoute
    }
    '/_user/learn/$lang/review/go': {
      id: '/_user/learn/$lang/review/go'
      path: '/go'
      fullPath: '/learn/$lang/review/go'
      preLoaderRoute: typeof UserLearnLangReviewGoRouteImport
      parentRoute: typeof UserLearnLangReviewRoute
    }
    '/_user/learn/$lang/requests/new': {
      id: '/_user/learn/$lang/requests/new'
      path: '/new'
      fullPath: '/learn/$lang/requests/new'
      preLoaderRoute: typeof UserLearnLangRequestsNewRouteImport
      parentRoute: typeof UserLearnLangRequestsRoute
    }
    '/_user/learn/$lang/requests/$id': {
      id: '/_user/learn/$lang/requests/$id'
      path: '/$id'
      fullPath: '/learn/$lang/requests/$id'
      preLoaderRoute: typeof UserLearnLangRequestsIdRouteImport
      parentRoute: typeof UserLearnLangRequestsRoute
    }
    '/_user/friends/chats/$friendId/recommend': {
      id: '/_user/friends/chats/$friendId/recommend'
      path: '/recommend'
      fullPath: '/friends/chats/$friendId/recommend'
      preLoaderRoute: typeof UserFriendsChatsFriendIdRecommendRouteImport
      parentRoute: typeof UserFriendsChatsFriendIdRoute
    }
  }
}

interface AuthRouteChildren {
  AuthFindAFriendRoute: typeof AuthFindAFriendRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSetNewPasswordRoute: typeof AuthSetNewPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthFindAFriendRoute: AuthFindAFriendRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSetNewPasswordRoute: AuthSetNewPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface UserFriendsChatsFriendIdRouteChildren {
  UserFriendsChatsFriendIdRecommendRoute: typeof UserFriendsChatsFriendIdRecommendRoute
}

const UserFriendsChatsFriendIdRouteChildren: UserFriendsChatsFriendIdRouteChildren =
  {
    UserFriendsChatsFriendIdRecommendRoute:
      UserFriendsChatsFriendIdRecommendRoute,
  }

const UserFriendsChatsFriendIdRouteWithChildren =
  UserFriendsChatsFriendIdRoute._addFileChildren(
    UserFriendsChatsFriendIdRouteChildren,
  )

interface UserFriendsChatsRouteChildren {
  UserFriendsChatsFriendIdRoute: typeof UserFriendsChatsFriendIdRouteWithChildren
  UserFriendsChatsIndexRoute: typeof UserFriendsChatsIndexRoute
}

const UserFriendsChatsRouteChildren: UserFriendsChatsRouteChildren = {
  UserFriendsChatsFriendIdRoute: UserFriendsChatsFriendIdRouteWithChildren,
  UserFriendsChatsIndexRoute: UserFriendsChatsIndexRoute,
}

const UserFriendsChatsRouteWithChildren =
  UserFriendsChatsRoute._addFileChildren(UserFriendsChatsRouteChildren)

interface UserFriendsSearchRouteChildren {
  UserFriendsSearchUidRoute: typeof UserFriendsSearchUidRoute
}

const UserFriendsSearchRouteChildren: UserFriendsSearchRouteChildren = {
  UserFriendsSearchUidRoute: UserFriendsSearchUidRoute,
}

const UserFriendsSearchRouteWithChildren =
  UserFriendsSearchRoute._addFileChildren(UserFriendsSearchRouteChildren)

interface UserFriendsRouteChildren {
  UserFriendsUidRoute: typeof UserFriendsUidRoute
  UserFriendsChatsRoute: typeof UserFriendsChatsRouteWithChildren
  UserFriendsInviteRoute: typeof UserFriendsInviteRoute
  UserFriendsRequestsRoute: typeof UserFriendsRequestsRoute
  UserFriendsSearchRoute: typeof UserFriendsSearchRouteWithChildren
  UserFriendsIndexRoute: typeof UserFriendsIndexRoute
}

const UserFriendsRouteChildren: UserFriendsRouteChildren = {
  UserFriendsUidRoute: UserFriendsUidRoute,
  UserFriendsChatsRoute: UserFriendsChatsRouteWithChildren,
  UserFriendsInviteRoute: UserFriendsInviteRoute,
  UserFriendsRequestsRoute: UserFriendsRequestsRoute,
  UserFriendsSearchRoute: UserFriendsSearchRouteWithChildren,
  UserFriendsIndexRoute: UserFriendsIndexRoute,
}

const UserFriendsRouteWithChildren = UserFriendsRoute._addFileChildren(
  UserFriendsRouteChildren,
)

interface UserLearnLangRequestsRouteChildren {
  UserLearnLangRequestsIdRoute: typeof UserLearnLangRequestsIdRoute
  UserLearnLangRequestsNewRoute: typeof UserLearnLangRequestsNewRoute
  UserLearnLangRequestsIndexRoute: typeof UserLearnLangRequestsIndexRoute
}

const UserLearnLangRequestsRouteChildren: UserLearnLangRequestsRouteChildren = {
  UserLearnLangRequestsIdRoute: UserLearnLangRequestsIdRoute,
  UserLearnLangRequestsNewRoute: UserLearnLangRequestsNewRoute,
  UserLearnLangRequestsIndexRoute: UserLearnLangRequestsIndexRoute,
}

const UserLearnLangRequestsRouteWithChildren =
  UserLearnLangRequestsRoute._addFileChildren(
    UserLearnLangRequestsRouteChildren,
  )

interface UserLearnLangReviewRouteChildren {
  UserLearnLangReviewGoRoute: typeof UserLearnLangReviewGoRoute
  UserLearnLangReviewIndexRoute: typeof UserLearnLangReviewIndexRoute
}

const UserLearnLangReviewRouteChildren: UserLearnLangReviewRouteChildren = {
  UserLearnLangReviewGoRoute: UserLearnLangReviewGoRoute,
  UserLearnLangReviewIndexRoute: UserLearnLangReviewIndexRoute,
}

const UserLearnLangReviewRouteWithChildren =
  UserLearnLangReviewRoute._addFileChildren(UserLearnLangReviewRouteChildren)

interface UserLearnLangRouteChildren {
  UserLearnLangIdRoute: typeof UserLearnLangIdRoute
  UserLearnLangAddPhraseRoute: typeof UserLearnLangAddPhraseRoute
  UserLearnLangBulkAddRoute: typeof UserLearnLangBulkAddRoute
  UserLearnLangDeckSettingsRoute: typeof UserLearnLangDeckSettingsRoute
  UserLearnLangLibraryRoute: typeof UserLearnLangLibraryRoute
  UserLearnLangRequestsRoute: typeof UserLearnLangRequestsRouteWithChildren
  UserLearnLangReviewRoute: typeof UserLearnLangReviewRouteWithChildren
  UserLearnLangSearchRoute: typeof UserLearnLangSearchRoute
  UserLearnLangIndexRoute: typeof UserLearnLangIndexRoute
}

const UserLearnLangRouteChildren: UserLearnLangRouteChildren = {
  UserLearnLangIdRoute: UserLearnLangIdRoute,
  UserLearnLangAddPhraseRoute: UserLearnLangAddPhraseRoute,
  UserLearnLangBulkAddRoute: UserLearnLangBulkAddRoute,
  UserLearnLangDeckSettingsRoute: UserLearnLangDeckSettingsRoute,
  UserLearnLangLibraryRoute: UserLearnLangLibraryRoute,
  UserLearnLangRequestsRoute: UserLearnLangRequestsRouteWithChildren,
  UserLearnLangReviewRoute: UserLearnLangReviewRouteWithChildren,
  UserLearnLangSearchRoute: UserLearnLangSearchRoute,
  UserLearnLangIndexRoute: UserLearnLangIndexRoute,
}

const UserLearnLangRouteWithChildren = UserLearnLangRoute._addFileChildren(
  UserLearnLangRouteChildren,
)

interface UserLearnRouteChildren {
  UserLearnLangRoute: typeof UserLearnLangRouteWithChildren
  UserLearnAddDeckRoute: typeof UserLearnAddDeckRoute
  UserLearnArchivedRoute: typeof UserLearnArchivedRoute
  UserLearnQuickSearchRoute: typeof UserLearnQuickSearchRoute
  UserLearnIndexRoute: typeof UserLearnIndexRoute
}

const UserLearnRouteChildren: UserLearnRouteChildren = {
  UserLearnLangRoute: UserLearnLangRouteWithChildren,
  UserLearnAddDeckRoute: UserLearnAddDeckRoute,
  UserLearnArchivedRoute: UserLearnArchivedRoute,
  UserLearnQuickSearchRoute: UserLearnQuickSearchRoute,
  UserLearnIndexRoute: UserLearnIndexRoute,
}

const UserLearnRouteWithChildren = UserLearnRoute._addFileChildren(
  UserLearnRouteChildren,
)

interface UserProfileRouteChildren {
  UserProfileChangeEmailRoute: typeof UserProfileChangeEmailRoute
  UserProfileChangeEmailConfirmRoute: typeof UserProfileChangeEmailConfirmRoute
  UserProfileChangePasswordRoute: typeof UserProfileChangePasswordRoute
  UserProfileIndexRoute: typeof UserProfileIndexRoute
}

const UserProfileRouteChildren: UserProfileRouteChildren = {
  UserProfileChangeEmailRoute: UserProfileChangeEmailRoute,
  UserProfileChangeEmailConfirmRoute: UserProfileChangeEmailConfirmRoute,
  UserProfileChangePasswordRoute: UserProfileChangePasswordRoute,
  UserProfileIndexRoute: UserProfileIndexRoute,
}

const UserProfileRouteWithChildren = UserProfileRoute._addFileChildren(
  UserProfileRouteChildren,
)

interface UserRouteChildren {
  UserAcceptInviteRoute: typeof UserAcceptInviteRoute
  UserFriendsRoute: typeof UserFriendsRouteWithChildren
  UserGettingStartedRoute: typeof UserGettingStartedRoute
  UserLearnRoute: typeof UserLearnRouteWithChildren
  UserProfileRoute: typeof UserProfileRouteWithChildren
}

const UserRouteChildren: UserRouteChildren = {
  UserAcceptInviteRoute: UserAcceptInviteRoute,
  UserFriendsRoute: UserFriendsRouteWithChildren,
  UserGettingStartedRoute: UserGettingStartedRoute,
  UserLearnRoute: UserLearnRouteWithChildren,
  UserProfileRoute: UserProfileRouteWithChildren,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  UserRoute: UserRouteWithChildren,
  ComponentsLazyRoute: ComponentsLazyRoute,
  PrivacyPolicyLazyRoute: PrivacyPolicyLazyRoute,
  RequestRemovalLazyRoute: RequestRemovalLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
