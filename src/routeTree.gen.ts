/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserImport } from './routes/_user'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as UserProfileImport } from './routes/_user/profile'
import { Route as UserLearnImport } from './routes/_user/learn'
import { Route as UserGettingStartedImport } from './routes/_user/getting-started'
import { Route as UserFriendsImport } from './routes/_user/friends'
import { Route as UserAcceptInviteImport } from './routes/_user/accept-invite'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthSetNewPasswordImport } from './routes/_auth/set-new-password'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as AuthFindAFriendImport } from './routes/_auth/find-a-friend'
import { Route as UserProfileIndexImport } from './routes/_user/profile.index'
import { Route as UserLearnIndexImport } from './routes/_user/learn.index'
import { Route as UserFriendsIndexImport } from './routes/_user/friends.index'
import { Route as UserProfileChangePasswordImport } from './routes/_user/profile.change-password'
import { Route as UserProfileChangeEmailConfirmImport } from './routes/_user/profile.change-email-confirm'
import { Route as UserProfileChangeEmailImport } from './routes/_user/profile.change-email'
import { Route as UserLearnQuickSearchImport } from './routes/_user/learn.quick-search'
import { Route as UserLearnAddDeckImport } from './routes/_user/learn.add-deck'
import { Route as UserLearnLangImport } from './routes/_user/learn.$lang'
import { Route as UserFriendsSearchImport } from './routes/_user/friends.search'
import { Route as UserFriendsInviteImport } from './routes/_user/friends.invite'
import { Route as UserFriendsUidImport } from './routes/_user/friends.$uid'
import { Route as UserLearnLangIndexImport } from './routes/_user/learn.$lang.index'
import { Route as UserLearnLangSearchImport } from './routes/_user/learn.$lang.search'
import { Route as UserLearnLangReviewImport } from './routes/_user/learn.$lang.review'
import { Route as UserLearnLangLibraryImport } from './routes/_user/learn.$lang.library'
import { Route as UserLearnLangDeckSettingsImport } from './routes/_user/learn.$lang.deck-settings'
import { Route as UserLearnLangAddPhraseImport } from './routes/_user/learn.$lang.add-phrase'
import { Route as UserLearnLangIdImport } from './routes/_user/learn.$lang.$id'
import { Route as UserFriendsSearchUidImport } from './routes/_user/friends.search.$uid'
import { Route as UserLearnLangReviewIndexImport } from './routes/_user/learn.$lang.review.index'
import { Route as UserLearnLangReviewGoImport } from './routes/_user/learn.$lang.review.go'

// Create Virtual Routes

const RequestRemovalLazyImport = createFileRoute('/request-removal')()
const PrivacyPolicyLazyImport = createFileRoute('/privacy-policy')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const ComponentsLazyImport = createFileRoute('/components')()

// Create/Update Routes

const RequestRemovalLazyRoute = RequestRemovalLazyImport.update({
  id: '/request-removal',
  path: '/request-removal',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/request-removal.lazy').then((d) => d.Route),
)

const PrivacyPolicyLazyRoute = PrivacyPolicyLazyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/privacy-policy.lazy').then((d) => d.Route),
)

const DashboardLazyRoute = DashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const ComponentsLazyRoute = ComponentsLazyImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/components.lazy').then((d) => d.Route))

const UserRoute = UserImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserProfileRoute = UserProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => UserRoute,
} as any)

const UserLearnRoute = UserLearnImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => UserRoute,
} as any)

const UserGettingStartedRoute = UserGettingStartedImport.update({
  id: '/getting-started',
  path: '/getting-started',
  getParentRoute: () => UserRoute,
} as any)

const UserFriendsRoute = UserFriendsImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => UserRoute,
} as any)

const UserAcceptInviteRoute = UserAcceptInviteImport.update({
  id: '/accept-invite',
  path: '/accept-invite',
  getParentRoute: () => UserRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSetNewPasswordRoute = AuthSetNewPasswordImport.update({
  id: '/set-new-password',
  path: '/set-new-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthFindAFriendRoute = AuthFindAFriendImport.update({
  id: '/find-a-friend',
  path: '/find-a-friend',
  getParentRoute: () => AuthRoute,
} as any)

const UserProfileIndexRoute = UserProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserProfileRoute,
} as any)

const UserLearnIndexRoute = UserLearnIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserLearnRoute,
} as any)

const UserFriendsIndexRoute = UserFriendsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserFriendsRoute,
} as any)

const UserProfileChangePasswordRoute = UserProfileChangePasswordImport.update({
  id: '/change-password',
  path: '/change-password',
  getParentRoute: () => UserProfileRoute,
} as any)

const UserProfileChangeEmailConfirmRoute =
  UserProfileChangeEmailConfirmImport.update({
    id: '/change-email-confirm',
    path: '/change-email-confirm',
    getParentRoute: () => UserProfileRoute,
  } as any)

const UserProfileChangeEmailRoute = UserProfileChangeEmailImport.update({
  id: '/change-email',
  path: '/change-email',
  getParentRoute: () => UserProfileRoute,
} as any)

const UserLearnQuickSearchRoute = UserLearnQuickSearchImport.update({
  id: '/quick-search',
  path: '/quick-search',
  getParentRoute: () => UserLearnRoute,
} as any)

const UserLearnAddDeckRoute = UserLearnAddDeckImport.update({
  id: '/add-deck',
  path: '/add-deck',
  getParentRoute: () => UserLearnRoute,
} as any)

const UserLearnLangRoute = UserLearnLangImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => UserLearnRoute,
} as any)

const UserFriendsSearchRoute = UserFriendsSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => UserFriendsRoute,
} as any)

const UserFriendsInviteRoute = UserFriendsInviteImport.update({
  id: '/invite',
  path: '/invite',
  getParentRoute: () => UserFriendsRoute,
} as any)

const UserFriendsUidRoute = UserFriendsUidImport.update({
  id: '/$uid',
  path: '/$uid',
  getParentRoute: () => UserFriendsRoute,
} as any)

const UserLearnLangIndexRoute = UserLearnLangIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserLearnLangSearchRoute = UserLearnLangSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserLearnLangReviewRoute = UserLearnLangReviewImport.update({
  id: '/review',
  path: '/review',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserLearnLangLibraryRoute = UserLearnLangLibraryImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserLearnLangDeckSettingsRoute = UserLearnLangDeckSettingsImport.update({
  id: '/deck-settings',
  path: '/deck-settings',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserLearnLangAddPhraseRoute = UserLearnLangAddPhraseImport.update({
  id: '/add-phrase',
  path: '/add-phrase',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserLearnLangIdRoute = UserLearnLangIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => UserLearnLangRoute,
} as any)

const UserFriendsSearchUidRoute = UserFriendsSearchUidImport.update({
  id: '/$uid',
  path: '/$uid',
  getParentRoute: () => UserFriendsSearchRoute,
} as any)

const UserLearnLangReviewIndexRoute = UserLearnLangReviewIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserLearnLangReviewRoute,
} as any)

const UserLearnLangReviewGoRoute = UserLearnLangReviewGoImport.update({
  id: '/go',
  path: '/go',
  getParentRoute: () => UserLearnLangReviewRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/components': {
      id: '/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/request-removal': {
      id: '/request-removal'
      path: '/request-removal'
      fullPath: '/request-removal'
      preLoaderRoute: typeof RequestRemovalLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/find-a-friend': {
      id: '/_auth/find-a-friend'
      path: '/find-a-friend'
      fullPath: '/find-a-friend'
      preLoaderRoute: typeof AuthFindAFriendImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/set-new-password': {
      id: '/_auth/set-new-password'
      path: '/set-new-password'
      fullPath: '/set-new-password'
      preLoaderRoute: typeof AuthSetNewPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/_user/accept-invite': {
      id: '/_user/accept-invite'
      path: '/accept-invite'
      fullPath: '/accept-invite'
      preLoaderRoute: typeof UserAcceptInviteImport
      parentRoute: typeof UserImport
    }
    '/_user/friends': {
      id: '/_user/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof UserFriendsImport
      parentRoute: typeof UserImport
    }
    '/_user/getting-started': {
      id: '/_user/getting-started'
      path: '/getting-started'
      fullPath: '/getting-started'
      preLoaderRoute: typeof UserGettingStartedImport
      parentRoute: typeof UserImport
    }
    '/_user/learn': {
      id: '/_user/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof UserLearnImport
      parentRoute: typeof UserImport
    }
    '/_user/profile': {
      id: '/_user/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof UserProfileImport
      parentRoute: typeof UserImport
    }
    '/_user/friends/$uid': {
      id: '/_user/friends/$uid'
      path: '/$uid'
      fullPath: '/friends/$uid'
      preLoaderRoute: typeof UserFriendsUidImport
      parentRoute: typeof UserFriendsImport
    }
    '/_user/friends/invite': {
      id: '/_user/friends/invite'
      path: '/invite'
      fullPath: '/friends/invite'
      preLoaderRoute: typeof UserFriendsInviteImport
      parentRoute: typeof UserFriendsImport
    }
    '/_user/friends/search': {
      id: '/_user/friends/search'
      path: '/search'
      fullPath: '/friends/search'
      preLoaderRoute: typeof UserFriendsSearchImport
      parentRoute: typeof UserFriendsImport
    }
    '/_user/learn/$lang': {
      id: '/_user/learn/$lang'
      path: '/$lang'
      fullPath: '/learn/$lang'
      preLoaderRoute: typeof UserLearnLangImport
      parentRoute: typeof UserLearnImport
    }
    '/_user/learn/add-deck': {
      id: '/_user/learn/add-deck'
      path: '/add-deck'
      fullPath: '/learn/add-deck'
      preLoaderRoute: typeof UserLearnAddDeckImport
      parentRoute: typeof UserLearnImport
    }
    '/_user/learn/quick-search': {
      id: '/_user/learn/quick-search'
      path: '/quick-search'
      fullPath: '/learn/quick-search'
      preLoaderRoute: typeof UserLearnQuickSearchImport
      parentRoute: typeof UserLearnImport
    }
    '/_user/profile/change-email': {
      id: '/_user/profile/change-email'
      path: '/change-email'
      fullPath: '/profile/change-email'
      preLoaderRoute: typeof UserProfileChangeEmailImport
      parentRoute: typeof UserProfileImport
    }
    '/_user/profile/change-email-confirm': {
      id: '/_user/profile/change-email-confirm'
      path: '/change-email-confirm'
      fullPath: '/profile/change-email-confirm'
      preLoaderRoute: typeof UserProfileChangeEmailConfirmImport
      parentRoute: typeof UserProfileImport
    }
    '/_user/profile/change-password': {
      id: '/_user/profile/change-password'
      path: '/change-password'
      fullPath: '/profile/change-password'
      preLoaderRoute: typeof UserProfileChangePasswordImport
      parentRoute: typeof UserProfileImport
    }
    '/_user/friends/': {
      id: '/_user/friends/'
      path: '/'
      fullPath: '/friends/'
      preLoaderRoute: typeof UserFriendsIndexImport
      parentRoute: typeof UserFriendsImport
    }
    '/_user/learn/': {
      id: '/_user/learn/'
      path: '/'
      fullPath: '/learn/'
      preLoaderRoute: typeof UserLearnIndexImport
      parentRoute: typeof UserLearnImport
    }
    '/_user/profile/': {
      id: '/_user/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof UserProfileIndexImport
      parentRoute: typeof UserProfileImport
    }
    '/_user/friends/search/$uid': {
      id: '/_user/friends/search/$uid'
      path: '/$uid'
      fullPath: '/friends/search/$uid'
      preLoaderRoute: typeof UserFriendsSearchUidImport
      parentRoute: typeof UserFriendsSearchImport
    }
    '/_user/learn/$lang/$id': {
      id: '/_user/learn/$lang/$id'
      path: '/$id'
      fullPath: '/learn/$lang/$id'
      preLoaderRoute: typeof UserLearnLangIdImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/add-phrase': {
      id: '/_user/learn/$lang/add-phrase'
      path: '/add-phrase'
      fullPath: '/learn/$lang/add-phrase'
      preLoaderRoute: typeof UserLearnLangAddPhraseImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/deck-settings': {
      id: '/_user/learn/$lang/deck-settings'
      path: '/deck-settings'
      fullPath: '/learn/$lang/deck-settings'
      preLoaderRoute: typeof UserLearnLangDeckSettingsImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/library': {
      id: '/_user/learn/$lang/library'
      path: '/library'
      fullPath: '/learn/$lang/library'
      preLoaderRoute: typeof UserLearnLangLibraryImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/review': {
      id: '/_user/learn/$lang/review'
      path: '/review'
      fullPath: '/learn/$lang/review'
      preLoaderRoute: typeof UserLearnLangReviewImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/search': {
      id: '/_user/learn/$lang/search'
      path: '/search'
      fullPath: '/learn/$lang/search'
      preLoaderRoute: typeof UserLearnLangSearchImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/': {
      id: '/_user/learn/$lang/'
      path: '/'
      fullPath: '/learn/$lang/'
      preLoaderRoute: typeof UserLearnLangIndexImport
      parentRoute: typeof UserLearnLangImport
    }
    '/_user/learn/$lang/review/go': {
      id: '/_user/learn/$lang/review/go'
      path: '/go'
      fullPath: '/learn/$lang/review/go'
      preLoaderRoute: typeof UserLearnLangReviewGoImport
      parentRoute: typeof UserLearnLangReviewImport
    }
    '/_user/learn/$lang/review/': {
      id: '/_user/learn/$lang/review/'
      path: '/'
      fullPath: '/learn/$lang/review/'
      preLoaderRoute: typeof UserLearnLangReviewIndexImport
      parentRoute: typeof UserLearnLangReviewImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthFindAFriendRoute: typeof AuthFindAFriendRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSetNewPasswordRoute: typeof AuthSetNewPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthFindAFriendRoute: AuthFindAFriendRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSetNewPasswordRoute: AuthSetNewPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface UserFriendsSearchRouteChildren {
  UserFriendsSearchUidRoute: typeof UserFriendsSearchUidRoute
}

const UserFriendsSearchRouteChildren: UserFriendsSearchRouteChildren = {
  UserFriendsSearchUidRoute: UserFriendsSearchUidRoute,
}

const UserFriendsSearchRouteWithChildren =
  UserFriendsSearchRoute._addFileChildren(UserFriendsSearchRouteChildren)

interface UserFriendsRouteChildren {
  UserFriendsUidRoute: typeof UserFriendsUidRoute
  UserFriendsInviteRoute: typeof UserFriendsInviteRoute
  UserFriendsSearchRoute: typeof UserFriendsSearchRouteWithChildren
  UserFriendsIndexRoute: typeof UserFriendsIndexRoute
}

const UserFriendsRouteChildren: UserFriendsRouteChildren = {
  UserFriendsUidRoute: UserFriendsUidRoute,
  UserFriendsInviteRoute: UserFriendsInviteRoute,
  UserFriendsSearchRoute: UserFriendsSearchRouteWithChildren,
  UserFriendsIndexRoute: UserFriendsIndexRoute,
}

const UserFriendsRouteWithChildren = UserFriendsRoute._addFileChildren(
  UserFriendsRouteChildren,
)

interface UserLearnLangReviewRouteChildren {
  UserLearnLangReviewGoRoute: typeof UserLearnLangReviewGoRoute
  UserLearnLangReviewIndexRoute: typeof UserLearnLangReviewIndexRoute
}

const UserLearnLangReviewRouteChildren: UserLearnLangReviewRouteChildren = {
  UserLearnLangReviewGoRoute: UserLearnLangReviewGoRoute,
  UserLearnLangReviewIndexRoute: UserLearnLangReviewIndexRoute,
}

const UserLearnLangReviewRouteWithChildren =
  UserLearnLangReviewRoute._addFileChildren(UserLearnLangReviewRouteChildren)

interface UserLearnLangRouteChildren {
  UserLearnLangIdRoute: typeof UserLearnLangIdRoute
  UserLearnLangAddPhraseRoute: typeof UserLearnLangAddPhraseRoute
  UserLearnLangDeckSettingsRoute: typeof UserLearnLangDeckSettingsRoute
  UserLearnLangLibraryRoute: typeof UserLearnLangLibraryRoute
  UserLearnLangReviewRoute: typeof UserLearnLangReviewRouteWithChildren
  UserLearnLangSearchRoute: typeof UserLearnLangSearchRoute
  UserLearnLangIndexRoute: typeof UserLearnLangIndexRoute
}

const UserLearnLangRouteChildren: UserLearnLangRouteChildren = {
  UserLearnLangIdRoute: UserLearnLangIdRoute,
  UserLearnLangAddPhraseRoute: UserLearnLangAddPhraseRoute,
  UserLearnLangDeckSettingsRoute: UserLearnLangDeckSettingsRoute,
  UserLearnLangLibraryRoute: UserLearnLangLibraryRoute,
  UserLearnLangReviewRoute: UserLearnLangReviewRouteWithChildren,
  UserLearnLangSearchRoute: UserLearnLangSearchRoute,
  UserLearnLangIndexRoute: UserLearnLangIndexRoute,
}

const UserLearnLangRouteWithChildren = UserLearnLangRoute._addFileChildren(
  UserLearnLangRouteChildren,
)

interface UserLearnRouteChildren {
  UserLearnLangRoute: typeof UserLearnLangRouteWithChildren
  UserLearnAddDeckRoute: typeof UserLearnAddDeckRoute
  UserLearnQuickSearchRoute: typeof UserLearnQuickSearchRoute
  UserLearnIndexRoute: typeof UserLearnIndexRoute
}

const UserLearnRouteChildren: UserLearnRouteChildren = {
  UserLearnLangRoute: UserLearnLangRouteWithChildren,
  UserLearnAddDeckRoute: UserLearnAddDeckRoute,
  UserLearnQuickSearchRoute: UserLearnQuickSearchRoute,
  UserLearnIndexRoute: UserLearnIndexRoute,
}

const UserLearnRouteWithChildren = UserLearnRoute._addFileChildren(
  UserLearnRouteChildren,
)

interface UserProfileRouteChildren {
  UserProfileChangeEmailRoute: typeof UserProfileChangeEmailRoute
  UserProfileChangeEmailConfirmRoute: typeof UserProfileChangeEmailConfirmRoute
  UserProfileChangePasswordRoute: typeof UserProfileChangePasswordRoute
  UserProfileIndexRoute: typeof UserProfileIndexRoute
}

const UserProfileRouteChildren: UserProfileRouteChildren = {
  UserProfileChangeEmailRoute: UserProfileChangeEmailRoute,
  UserProfileChangeEmailConfirmRoute: UserProfileChangeEmailConfirmRoute,
  UserProfileChangePasswordRoute: UserProfileChangePasswordRoute,
  UserProfileIndexRoute: UserProfileIndexRoute,
}

const UserProfileRouteWithChildren = UserProfileRoute._addFileChildren(
  UserProfileRouteChildren,
)

interface UserRouteChildren {
  UserAcceptInviteRoute: typeof UserAcceptInviteRoute
  UserFriendsRoute: typeof UserFriendsRouteWithChildren
  UserGettingStartedRoute: typeof UserGettingStartedRoute
  UserLearnRoute: typeof UserLearnRouteWithChildren
  UserProfileRoute: typeof UserProfileRouteWithChildren
}

const UserRouteChildren: UserRouteChildren = {
  UserAcceptInviteRoute: UserAcceptInviteRoute,
  UserFriendsRoute: UserFriendsRouteWithChildren,
  UserGettingStartedRoute: UserGettingStartedRoute,
  UserLearnRoute: UserLearnRouteWithChildren,
  UserProfileRoute: UserProfileRouteWithChildren,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof UserRouteWithChildren
  '/components': typeof ComponentsLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/request-removal': typeof RequestRemovalLazyRoute
  '/find-a-friend': typeof AuthFindAFriendRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/set-new-password': typeof AuthSetNewPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/accept-invite': typeof UserAcceptInviteRoute
  '/friends': typeof UserFriendsRouteWithChildren
  '/getting-started': typeof UserGettingStartedRoute
  '/learn': typeof UserLearnRouteWithChildren
  '/profile': typeof UserProfileRouteWithChildren
  '/friends/$uid': typeof UserFriendsUidRoute
  '/friends/invite': typeof UserFriendsInviteRoute
  '/friends/search': typeof UserFriendsSearchRouteWithChildren
  '/learn/$lang': typeof UserLearnLangRouteWithChildren
  '/learn/add-deck': typeof UserLearnAddDeckRoute
  '/learn/quick-search': typeof UserLearnQuickSearchRoute
  '/profile/change-email': typeof UserProfileChangeEmailRoute
  '/profile/change-email-confirm': typeof UserProfileChangeEmailConfirmRoute
  '/profile/change-password': typeof UserProfileChangePasswordRoute
  '/friends/': typeof UserFriendsIndexRoute
  '/learn/': typeof UserLearnIndexRoute
  '/profile/': typeof UserProfileIndexRoute
  '/friends/search/$uid': typeof UserFriendsSearchUidRoute
  '/learn/$lang/$id': typeof UserLearnLangIdRoute
  '/learn/$lang/add-phrase': typeof UserLearnLangAddPhraseRoute
  '/learn/$lang/deck-settings': typeof UserLearnLangDeckSettingsRoute
  '/learn/$lang/library': typeof UserLearnLangLibraryRoute
  '/learn/$lang/review': typeof UserLearnLangReviewRouteWithChildren
  '/learn/$lang/search': typeof UserLearnLangSearchRoute
  '/learn/$lang/': typeof UserLearnLangIndexRoute
  '/learn/$lang/review/go': typeof UserLearnLangReviewGoRoute
  '/learn/$lang/review/': typeof UserLearnLangReviewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof UserRouteWithChildren
  '/components': typeof ComponentsLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/request-removal': typeof RequestRemovalLazyRoute
  '/find-a-friend': typeof AuthFindAFriendRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/set-new-password': typeof AuthSetNewPasswordRoute
  '/signup': typeof AuthSignupRoute
  '/accept-invite': typeof UserAcceptInviteRoute
  '/getting-started': typeof UserGettingStartedRoute
  '/friends/$uid': typeof UserFriendsUidRoute
  '/friends/invite': typeof UserFriendsInviteRoute
  '/friends/search': typeof UserFriendsSearchRouteWithChildren
  '/learn/add-deck': typeof UserLearnAddDeckRoute
  '/learn/quick-search': typeof UserLearnQuickSearchRoute
  '/profile/change-email': typeof UserProfileChangeEmailRoute
  '/profile/change-email-confirm': typeof UserProfileChangeEmailConfirmRoute
  '/profile/change-password': typeof UserProfileChangePasswordRoute
  '/friends': typeof UserFriendsIndexRoute
  '/learn': typeof UserLearnIndexRoute
  '/profile': typeof UserProfileIndexRoute
  '/friends/search/$uid': typeof UserFriendsSearchUidRoute
  '/learn/$lang/$id': typeof UserLearnLangIdRoute
  '/learn/$lang/add-phrase': typeof UserLearnLangAddPhraseRoute
  '/learn/$lang/deck-settings': typeof UserLearnLangDeckSettingsRoute
  '/learn/$lang/library': typeof UserLearnLangLibraryRoute
  '/learn/$lang/search': typeof UserLearnLangSearchRoute
  '/learn/$lang': typeof UserLearnLangIndexRoute
  '/learn/$lang/review/go': typeof UserLearnLangReviewGoRoute
  '/learn/$lang/review': typeof UserLearnLangReviewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_user': typeof UserRouteWithChildren
  '/components': typeof ComponentsLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/request-removal': typeof RequestRemovalLazyRoute
  '/_auth/find-a-friend': typeof AuthFindAFriendRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/set-new-password': typeof AuthSetNewPasswordRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_user/accept-invite': typeof UserAcceptInviteRoute
  '/_user/friends': typeof UserFriendsRouteWithChildren
  '/_user/getting-started': typeof UserGettingStartedRoute
  '/_user/learn': typeof UserLearnRouteWithChildren
  '/_user/profile': typeof UserProfileRouteWithChildren
  '/_user/friends/$uid': typeof UserFriendsUidRoute
  '/_user/friends/invite': typeof UserFriendsInviteRoute
  '/_user/friends/search': typeof UserFriendsSearchRouteWithChildren
  '/_user/learn/$lang': typeof UserLearnLangRouteWithChildren
  '/_user/learn/add-deck': typeof UserLearnAddDeckRoute
  '/_user/learn/quick-search': typeof UserLearnQuickSearchRoute
  '/_user/profile/change-email': typeof UserProfileChangeEmailRoute
  '/_user/profile/change-email-confirm': typeof UserProfileChangeEmailConfirmRoute
  '/_user/profile/change-password': typeof UserProfileChangePasswordRoute
  '/_user/friends/': typeof UserFriendsIndexRoute
  '/_user/learn/': typeof UserLearnIndexRoute
  '/_user/profile/': typeof UserProfileIndexRoute
  '/_user/friends/search/$uid': typeof UserFriendsSearchUidRoute
  '/_user/learn/$lang/$id': typeof UserLearnLangIdRoute
  '/_user/learn/$lang/add-phrase': typeof UserLearnLangAddPhraseRoute
  '/_user/learn/$lang/deck-settings': typeof UserLearnLangDeckSettingsRoute
  '/_user/learn/$lang/library': typeof UserLearnLangLibraryRoute
  '/_user/learn/$lang/review': typeof UserLearnLangReviewRouteWithChildren
  '/_user/learn/$lang/search': typeof UserLearnLangSearchRoute
  '/_user/learn/$lang/': typeof UserLearnLangIndexRoute
  '/_user/learn/$lang/review/go': typeof UserLearnLangReviewGoRoute
  '/_user/learn/$lang/review/': typeof UserLearnLangReviewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/components'
    | '/dashboard'
    | '/privacy-policy'
    | '/request-removal'
    | '/find-a-friend'
    | '/forgot-password'
    | '/login'
    | '/set-new-password'
    | '/signup'
    | '/accept-invite'
    | '/friends'
    | '/getting-started'
    | '/learn'
    | '/profile'
    | '/friends/$uid'
    | '/friends/invite'
    | '/friends/search'
    | '/learn/$lang'
    | '/learn/add-deck'
    | '/learn/quick-search'
    | '/profile/change-email'
    | '/profile/change-email-confirm'
    | '/profile/change-password'
    | '/friends/'
    | '/learn/'
    | '/profile/'
    | '/friends/search/$uid'
    | '/learn/$lang/$id'
    | '/learn/$lang/add-phrase'
    | '/learn/$lang/deck-settings'
    | '/learn/$lang/library'
    | '/learn/$lang/review'
    | '/learn/$lang/search'
    | '/learn/$lang/'
    | '/learn/$lang/review/go'
    | '/learn/$lang/review/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/components'
    | '/dashboard'
    | '/privacy-policy'
    | '/request-removal'
    | '/find-a-friend'
    | '/forgot-password'
    | '/login'
    | '/set-new-password'
    | '/signup'
    | '/accept-invite'
    | '/getting-started'
    | '/friends/$uid'
    | '/friends/invite'
    | '/friends/search'
    | '/learn/add-deck'
    | '/learn/quick-search'
    | '/profile/change-email'
    | '/profile/change-email-confirm'
    | '/profile/change-password'
    | '/friends'
    | '/learn'
    | '/profile'
    | '/friends/search/$uid'
    | '/learn/$lang/$id'
    | '/learn/$lang/add-phrase'
    | '/learn/$lang/deck-settings'
    | '/learn/$lang/library'
    | '/learn/$lang/search'
    | '/learn/$lang'
    | '/learn/$lang/review/go'
    | '/learn/$lang/review'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_user'
    | '/components'
    | '/dashboard'
    | '/privacy-policy'
    | '/request-removal'
    | '/_auth/find-a-friend'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/set-new-password'
    | '/_auth/signup'
    | '/_user/accept-invite'
    | '/_user/friends'
    | '/_user/getting-started'
    | '/_user/learn'
    | '/_user/profile'
    | '/_user/friends/$uid'
    | '/_user/friends/invite'
    | '/_user/friends/search'
    | '/_user/learn/$lang'
    | '/_user/learn/add-deck'
    | '/_user/learn/quick-search'
    | '/_user/profile/change-email'
    | '/_user/profile/change-email-confirm'
    | '/_user/profile/change-password'
    | '/_user/friends/'
    | '/_user/learn/'
    | '/_user/profile/'
    | '/_user/friends/search/$uid'
    | '/_user/learn/$lang/$id'
    | '/_user/learn/$lang/add-phrase'
    | '/_user/learn/$lang/deck-settings'
    | '/_user/learn/$lang/library'
    | '/_user/learn/$lang/review'
    | '/_user/learn/$lang/search'
    | '/_user/learn/$lang/'
    | '/_user/learn/$lang/review/go'
    | '/_user/learn/$lang/review/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
  ComponentsLazyRoute: typeof ComponentsLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  PrivacyPolicyLazyRoute: typeof PrivacyPolicyLazyRoute
  RequestRemovalLazyRoute: typeof RequestRemovalLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  UserRoute: UserRouteWithChildren,
  ComponentsLazyRoute: ComponentsLazyRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  PrivacyPolicyLazyRoute: PrivacyPolicyLazyRoute,
  RequestRemovalLazyRoute: RequestRemovalLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_user",
        "/components",
        "/dashboard",
        "/privacy-policy",
        "/request-removal"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/find-a-friend",
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/set-new-password",
        "/_auth/signup"
      ]
    },
    "/_user": {
      "filePath": "_user.tsx",
      "children": [
        "/_user/accept-invite",
        "/_user/friends",
        "/_user/getting-started",
        "/_user/learn",
        "/_user/profile"
      ]
    },
    "/components": {
      "filePath": "components.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.lazy.tsx"
    },
    "/request-removal": {
      "filePath": "request-removal.lazy.tsx"
    },
    "/_auth/find-a-friend": {
      "filePath": "_auth/find-a-friend.tsx",
      "parent": "/_auth"
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/set-new-password": {
      "filePath": "_auth/set-new-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_user/accept-invite": {
      "filePath": "_user/accept-invite.tsx",
      "parent": "/_user"
    },
    "/_user/friends": {
      "filePath": "_user/friends.tsx",
      "parent": "/_user",
      "children": [
        "/_user/friends/$uid",
        "/_user/friends/invite",
        "/_user/friends/search",
        "/_user/friends/"
      ]
    },
    "/_user/getting-started": {
      "filePath": "_user/getting-started.tsx",
      "parent": "/_user"
    },
    "/_user/learn": {
      "filePath": "_user/learn.tsx",
      "parent": "/_user",
      "children": [
        "/_user/learn/$lang",
        "/_user/learn/add-deck",
        "/_user/learn/quick-search",
        "/_user/learn/"
      ]
    },
    "/_user/profile": {
      "filePath": "_user/profile.tsx",
      "parent": "/_user",
      "children": [
        "/_user/profile/change-email",
        "/_user/profile/change-email-confirm",
        "/_user/profile/change-password",
        "/_user/profile/"
      ]
    },
    "/_user/friends/$uid": {
      "filePath": "_user/friends.$uid.tsx",
      "parent": "/_user/friends"
    },
    "/_user/friends/invite": {
      "filePath": "_user/friends.invite.tsx",
      "parent": "/_user/friends"
    },
    "/_user/friends/search": {
      "filePath": "_user/friends.search.tsx",
      "parent": "/_user/friends",
      "children": [
        "/_user/friends/search/$uid"
      ]
    },
    "/_user/learn/$lang": {
      "filePath": "_user/learn.$lang.tsx",
      "parent": "/_user/learn",
      "children": [
        "/_user/learn/$lang/$id",
        "/_user/learn/$lang/add-phrase",
        "/_user/learn/$lang/deck-settings",
        "/_user/learn/$lang/library",
        "/_user/learn/$lang/review",
        "/_user/learn/$lang/search",
        "/_user/learn/$lang/"
      ]
    },
    "/_user/learn/add-deck": {
      "filePath": "_user/learn.add-deck.tsx",
      "parent": "/_user/learn"
    },
    "/_user/learn/quick-search": {
      "filePath": "_user/learn.quick-search.tsx",
      "parent": "/_user/learn"
    },
    "/_user/profile/change-email": {
      "filePath": "_user/profile.change-email.tsx",
      "parent": "/_user/profile"
    },
    "/_user/profile/change-email-confirm": {
      "filePath": "_user/profile.change-email-confirm.tsx",
      "parent": "/_user/profile"
    },
    "/_user/profile/change-password": {
      "filePath": "_user/profile.change-password.tsx",
      "parent": "/_user/profile"
    },
    "/_user/friends/": {
      "filePath": "_user/friends.index.tsx",
      "parent": "/_user/friends"
    },
    "/_user/learn/": {
      "filePath": "_user/learn.index.tsx",
      "parent": "/_user/learn"
    },
    "/_user/profile/": {
      "filePath": "_user/profile.index.tsx",
      "parent": "/_user/profile"
    },
    "/_user/friends/search/$uid": {
      "filePath": "_user/friends.search.$uid.tsx",
      "parent": "/_user/friends/search"
    },
    "/_user/learn/$lang/$id": {
      "filePath": "_user/learn.$lang.$id.tsx",
      "parent": "/_user/learn/$lang"
    },
    "/_user/learn/$lang/add-phrase": {
      "filePath": "_user/learn.$lang.add-phrase.tsx",
      "parent": "/_user/learn/$lang"
    },
    "/_user/learn/$lang/deck-settings": {
      "filePath": "_user/learn.$lang.deck-settings.tsx",
      "parent": "/_user/learn/$lang"
    },
    "/_user/learn/$lang/library": {
      "filePath": "_user/learn.$lang.library.tsx",
      "parent": "/_user/learn/$lang"
    },
    "/_user/learn/$lang/review": {
      "filePath": "_user/learn.$lang.review.tsx",
      "parent": "/_user/learn/$lang",
      "children": [
        "/_user/learn/$lang/review/go",
        "/_user/learn/$lang/review/"
      ]
    },
    "/_user/learn/$lang/search": {
      "filePath": "_user/learn.$lang.search.tsx",
      "parent": "/_user/learn/$lang"
    },
    "/_user/learn/$lang/": {
      "filePath": "_user/learn.$lang.index.tsx",
      "parent": "/_user/learn/$lang"
    },
    "/_user/learn/$lang/review/go": {
      "filePath": "_user/learn.$lang.review.go.tsx",
      "parent": "/_user/learn/$lang/review"
    },
    "/_user/learn/$lang/review/": {
      "filePath": "_user/learn.$lang.review.index.tsx",
      "parent": "/_user/learn/$lang/review"
    }
  }
}
ROUTE_MANIFEST_END */
